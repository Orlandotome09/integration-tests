{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Documentation for Temis Compliance Microservice.",
        "title": "Temis Compliance API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "api-dev.bexs.com.br",
    "basePath": "/compliance",
    "paths": {
        "/check/{entity_id}": {
            "post": {
                "description": "execute compliance validation over an entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "States"
                ],
                "summary": "Post compliance check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of Compliance Engine ",
                        "name": "entity_type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of new check event",
                        "name": "event_type",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contracts.ComplianceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile/{profile_id}": {
            "get": {
                "description": "Get Profile by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get Profile by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "profile_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/bitbucket_org_bexstech_temis-compliance_src_presentation_profileApi_contracts.ProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/result/{entity_id}": {
            "get": {
                "description": "get states result for a given entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "States"
                ],
                "summary": "Get compliance result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contracts.ComplianceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/states/reprocess": {
            "post": {
                "description": "Resync compliance states",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "States"
                ],
                "summary": "Resync compliance states",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the Engine to reprocess",
                        "name": "engine_name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Array of entities ids to resync compliance states",
                        "name": "ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contracts.ComplianceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/states/resync": {
            "post": {
                "description": "Resync compliance states",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "States"
                ],
                "summary": "Resync compliance states",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Array of entities ids to resync compliance states",
                        "name": "ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contracts.ComplianceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/states/search": {
            "get": {
                "description": "search profile states",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "States"
                ],
                "summary": "Search profile states",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search By rule_name",
                        "name": "rule_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Skip rows returned by setting offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cut rows returned by setting limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort rows by sort_by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order rows by order_by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter rows by result status of the profile",
                        "name": "result_status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter rows by filter using profile_id, name or document_number",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter rows by one or more partner_id",
                        "name": "partner_ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter rows by one or more parent_id",
                        "name": "parents_ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter rows by one or more offer_type",
                        "name": "offer_types",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter rows by one rule name",
                        "name": "rule_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contracts.SearchPaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/states/search/{profile_id}": {
            "get": {
                "description": "Find states by profile_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "States"
                ],
                "summary": "Find states by profile_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "profile_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Find by result_status",
                        "name": "result_status",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Engine name",
                        "name": "engine_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contracts.FindResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/states/{entity_id}": {
            "get": {
                "description": "Get state from by entity_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "States"
                ],
                "summary": "Get state from entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search only states pending",
                        "name": "only_pending",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contracts.StateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bitbucket_org_bexstech_temis-compliance_src_presentation_profileApi_contracts.ProfileResponse": {
            "type": "object",
            "properties": {
                "board_of_directors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Director"
                    }
                },
                "callback_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "legacy_id": {
                    "type": "string"
                },
                "legal_representatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.LegalRepresentative"
                    }
                },
                "ownership_structure": {
                    "$ref": "#/definitions/entity.OwnershipStructure"
                },
                "parent_id": {
                    "type": "string"
                },
                "person": {
                    "$ref": "#/definitions/entity.Person"
                },
                "profile_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "contracts.ComplianceResponse": {
            "type": "object",
            "properties": {
                "detailed_result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contracts.detailedResult"
                    }
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/values.Result"
                }
            }
        },
        "contracts.DetailedRuleProblem": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/values.ProblemCode"
                },
                "detail": {}
            }
        },
        "contracts.DetailedRuleResponse": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object"
                },
                "name": {
                    "$ref": "#/definitions/values.RuleName"
                },
                "pending": {
                    "type": "boolean"
                },
                "problems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contracts.DetailedRuleProblem"
                    }
                },
                "result": {
                    "$ref": "#/definitions/values.Result"
                },
                "set": {
                    "$ref": "#/definitions/values.RuleSet"
                },
                "step_number": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "contracts.FindResponse": {
            "type": "object",
            "properties": {
                "profile_id": {
                    "type": "string"
                },
                "states": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contracts.StateResponse"
                    }
                }
            }
        },
        "contracts.RuleResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/values.RuleName"
                }
            }
        },
        "contracts.SearchPaginatedResponse": {
            "type": "object",
            "properties": {
                "number_of_pages": {
                    "type": "integer"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contracts.SearchResponse"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "contracts.SearchResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "document_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "partner_id": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contracts.RuleResponse"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "contracts.StateResponse": {
            "type": "object",
            "properties": {
                "engine_name": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/values.Result"
                },
                "rule_set_result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contracts.DetailedRuleResponse"
                    }
                }
            }
        },
        "contracts.detail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "detail": {}
            }
        },
        "contracts.detailedResult": {
            "type": "object",
            "properties": {
                "approved_value": {
                    "type": "number"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/contracts.detail"
                    }
                },
                "limit_interval": {
                    "type": "string"
                },
                "limit_type": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "entity.ActivityRiskParams": {
            "type": "object"
        },
        "entity.Address": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "entity.BlackListParams": {
            "type": "object"
        },
        "entity.BlacklistStatus": {
            "type": "object",
            "properties": {
                "justification": {
                    "$ref": "#/definitions/entity.Justification"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.BoardOfDirectorsParams": {
            "type": "object"
        },
        "entity.BureauInformation": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.BureauParams": {
            "type": "object",
            "properties": {
                "approved_statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "has_problems_in_serasa_pending": {
                    "type": "boolean"
                },
                "has_problems_in_serasa_status": {
                    "$ref": "#/definitions/values.Result"
                },
                "not_found_in_serasa_pending": {
                    "type": "boolean"
                },
                "not_found_in_serasa_status": {
                    "$ref": "#/definitions/values.Result"
                }
            }
        },
        "entity.CAFParams": {
            "type": "object"
        },
        "entity.Catalog": {
            "type": "object",
            "properties": {
                "catalog_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "offer_type": {
                    "type": "string"
                },
                "partner_id": {
                    "type": "string"
                },
                "product_config": {
                    "$ref": "#/definitions/entity.ProductConfig"
                },
                "profile_type": {
                    "$ref": "#/definitions/values.PersonType"
                },
                "role_type": {
                    "$ref": "#/definitions/values.RoleType"
                },
                "updated_at": {
                    "type": "string"
                },
                "validation_steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ValidationStep"
                    }
                }
            }
        },
        "entity.Company": {
            "type": "object",
            "properties": {
                "annual_income": {
                    "type": "number"
                },
                "annual_income_currency": {
                    "type": "string"
                },
                "assets": {
                    "type": "number"
                },
                "assets_currency": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "company_registration_number": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "date_of_incorporation": {
                    "type": "string"
                },
                "goods_delivery": {
                    "$ref": "#/definitions/entity.GoodsDelivery"
                },
                "legal_name": {
                    "type": "string"
                },
                "legal_nature": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "place_of_incorporation": {
                    "type": "string"
                },
                "share_capital": {
                    "$ref": "#/definitions/entity.MonetaryAmount"
                },
                "tax_payer_identification": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "entity.Condition": {
            "type": "object",
            "properties": {
                "field_name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.Contact": {
            "type": "object",
            "properties": {
                "contact_id": {
                    "type": "string"
                },
                "document_number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "phones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Phone"
                    }
                },
                "profile_id": {
                    "type": "string"
                }
            }
        },
        "entity.DOAParams": {
            "type": "object",
            "properties": {
                "approved_score": {
                    "type": "number"
                },
                "rejected_score": {
                    "type": "number"
                }
            }
        },
        "entity.Director": {
            "type": "object",
            "properties": {
                "director_id": {
                    "type": "string"
                },
                "person": {
                    "$ref": "#/definitions/entity.Person"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "entity.Document": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string"
                },
                "document_sub_type": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "emission_date": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                }
            }
        },
        "entity.DocumentFile": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "document_file_id": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "file_side": {
                    "$ref": "#/definitions/values.FileSide"
                }
            }
        },
        "entity.DocumentRequired": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Condition"
                    }
                },
                "document_sub_type": {
                    "type": "string"
                },
                "document_type": {
                    "$ref": "#/definitions/values.DocumentType"
                },
                "file_required": {
                    "type": "boolean"
                },
                "pending_on_approval": {
                    "type": "boolean"
                }
            }
        },
        "entity.EnrichedInformation": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "board_of_directors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Director"
                    }
                },
                "economic_activity": {
                    "type": "string"
                },
                "legal_name": {
                    "type": "string"
                },
                "legal_nature": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opening_date": {
                    "type": "string"
                },
                "ownership_structure": {
                    "$ref": "#/definitions/entity.OwnershipStructure"
                },
                "providers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Provider"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.GoodsDelivery": {
            "type": "object",
            "properties": {
                "average_delivery_days": {
                    "type": "integer"
                },
                "insurance": {
                    "type": "boolean"
                },
                "shipping_methods": {
                    "type": "string"
                },
                "tracking_code_available": {
                    "type": "boolean"
                }
            }
        },
        "entity.IncompleteParams": {
            "type": "object",
            "properties": {
                "address_required": {
                    "type": "boolean"
                },
                "date_of_birth_required": {
                    "type": "boolean"
                },
                "documents_required": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DocumentRequired"
                    }
                },
                "email_required": {
                    "type": "boolean"
                },
                "inputted_or_enriched_date_of_birth_required": {
                    "type": "boolean"
                },
                "last_name_required": {
                    "type": "boolean"
                },
                "pep_required": {
                    "type": "boolean"
                },
                "phone_number_required": {
                    "type": "boolean"
                }
            }
        },
        "entity.Individual": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "number"
                },
                "assets_currency": {
                    "type": "string"
                },
                "bureau_information": {
                    "$ref": "#/definitions/entity.BureauInformation"
                },
                "contacts": {
                    "type": "string"
                },
                "country_of_tax_residency": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "date_of_birth_inputted": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "foreign_tax_residency": {
                    "type": "boolean"
                },
                "income": {
                    "type": "number"
                },
                "income_currency": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "occupation": {
                    "type": "string"
                },
                "pep": {
                    "type": "boolean"
                },
                "phones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Phone"
                    }
                },
                "us_person": {
                    "type": "boolean"
                }
            }
        },
        "entity.Justification": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "string"
                },
                "author": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.LegalRepresentative": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Address"
                    }
                },
                "blacklist_status": {
                    "$ref": "#/definitions/entity.BlacklistStatus"
                },
                "catalog": {
                    "$ref": "#/definitions/entity.Catalog"
                },
                "company": {
                    "$ref": "#/definitions/entity.Company"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Contact"
                    }
                },
                "document_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DocumentFile"
                    }
                },
                "document_number": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Document"
                    }
                },
                "email": {
                    "type": "string"
                },
                "enriched_information": {
                    "$ref": "#/definitions/entity.EnrichedInformation"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "$ref": "#/definitions/values.EntityType"
                },
                "expiration_date": {
                    "type": "string"
                },
                "individual": {
                    "$ref": "#/definitions/entity.Individual"
                },
                "legal_representative_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notification_recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.NotificationRecipient"
                    }
                },
                "offer_type": {
                    "type": "string"
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Override"
                    }
                },
                "partner_id": {
                    "type": "string"
                },
                "pep_information": {
                    "$ref": "#/definitions/entity.PepInformation"
                },
                "person_type": {
                    "$ref": "#/definitions/values.PersonType"
                },
                "profile_id": {
                    "type": "string"
                },
                "role_type": {
                    "$ref": "#/definitions/values.RoleType"
                },
                "validation_steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.RuleValidatorStep"
                    }
                },
                "watchlist": {
                    "$ref": "#/definitions/entity.Watchlist"
                }
            }
        },
        "entity.LegalRepresentativeParams": {
            "type": "object"
        },
        "entity.ManualBlockParams": {
            "type": "object"
        },
        "entity.ManualValidationParams": {
            "type": "object"
        },
        "entity.MinimumBillingParams": {
            "type": "object",
            "properties": {
                "minimum_billing": {
                    "type": "number"
                }
            }
        },
        "entity.MinimumIncomeParams": {
            "type": "object",
            "properties": {
                "minimum_income": {
                    "type": "number"
                }
            }
        },
        "entity.MonetaryAmount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "entity.NotificationRecipient": {
            "type": "object",
            "properties": {
                "copy_email": {
                    "type": "string"
                },
                "email_to": {
                    "type": "string"
                },
                "notification_type": {
                    "$ref": "#/definitions/values.NotificationType"
                }
            }
        },
        "entity.Override": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "$ref": "#/definitions/values.EntityType"
                },
                "parent_id": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/values.Result"
                },
                "rule_name": {
                    "$ref": "#/definitions/values.RuleName"
                },
                "rule_set": {
                    "$ref": "#/definitions/values.RuleSet"
                }
            }
        },
        "entity.OwnershipStructure": {
            "type": "object",
            "properties": {
                "final_beneficiaries_count": {
                    "type": "integer"
                },
                "shareholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Shareholder"
                    }
                },
                "shareholding_sum": {
                    "type": "number"
                }
            }
        },
        "entity.OwnershipStructureParams": {
            "type": "object",
            "properties": {
                "min_shareholding_percentage": {
                    "type": "number"
                }
            }
        },
        "entity.PepInformation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "document_number": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "institution": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "entity.PepParams": {
            "type": "object"
        },
        "entity.Person": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Address"
                    }
                },
                "blacklist_status": {
                    "$ref": "#/definitions/entity.BlacklistStatus"
                },
                "catalog": {
                    "$ref": "#/definitions/entity.Catalog"
                },
                "company": {
                    "$ref": "#/definitions/entity.Company"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Contact"
                    }
                },
                "document_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DocumentFile"
                    }
                },
                "document_number": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Document"
                    }
                },
                "email": {
                    "type": "string"
                },
                "enriched_information": {
                    "$ref": "#/definitions/entity.EnrichedInformation"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "$ref": "#/definitions/values.EntityType"
                },
                "individual": {
                    "$ref": "#/definitions/entity.Individual"
                },
                "name": {
                    "type": "string"
                },
                "notification_recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.NotificationRecipient"
                    }
                },
                "offer_type": {
                    "type": "string"
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Override"
                    }
                },
                "partner_id": {
                    "type": "string"
                },
                "pep_information": {
                    "$ref": "#/definitions/entity.PepInformation"
                },
                "person_type": {
                    "$ref": "#/definitions/values.PersonType"
                },
                "profile_id": {
                    "type": "string"
                },
                "role_type": {
                    "$ref": "#/definitions/values.RoleType"
                },
                "validation_steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.RuleValidatorStep"
                    }
                },
                "watchlist": {
                    "$ref": "#/definitions/entity.Watchlist"
                }
            }
        },
        "entity.Phone": {
            "type": "object",
            "properties": {
                "area_code": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.ProductConfig": {
            "type": "object",
            "properties": {
                "create_bexs_account": {
                    "type": "boolean"
                },
                "enrich_profile_with_bureau_data": {
                    "type": "boolean"
                },
                "limit_integration": {
                    "type": "boolean"
                },
                "tree_integration": {
                    "type": "boolean"
                }
            }
        },
        "entity.Provider": {
            "type": "object",
            "properties": {
                "provider_name": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entity.RuleSetConfig": {
            "type": "object",
            "properties": {
                "activity_risk_params": {
                    "$ref": "#/definitions/entity.ActivityRiskParams"
                },
                "black_list_params": {
                    "$ref": "#/definitions/entity.BlackListParams"
                },
                "board_of_directors_params": {
                    "$ref": "#/definitions/entity.BoardOfDirectorsParams"
                },
                "bureau_params": {
                    "$ref": "#/definitions/entity.BureauParams"
                },
                "caf_params": {
                    "$ref": "#/definitions/entity.CAFParams"
                },
                "doa_params": {
                    "$ref": "#/definitions/entity.DOAParams"
                },
                "incomplete_params": {
                    "$ref": "#/definitions/entity.IncompleteParams"
                },
                "legal_representative_params": {
                    "$ref": "#/definitions/entity.LegalRepresentativeParams"
                },
                "manual_block_params": {
                    "$ref": "#/definitions/entity.ManualBlockParams"
                },
                "manual_validation_params": {
                    "$ref": "#/definitions/entity.ManualValidationParams"
                },
                "minimum_billing_params": {
                    "$ref": "#/definitions/entity.MinimumBillingParams"
                },
                "minimum_income_params": {
                    "$ref": "#/definitions/entity.MinimumIncomeParams"
                },
                "ownership_structure_params": {
                    "$ref": "#/definitions/entity.OwnershipStructureParams"
                },
                "pep_params": {
                    "$ref": "#/definitions/entity.PepParams"
                },
                "under_age_params": {
                    "$ref": "#/definitions/entity.UnderAgeParams"
                },
                "watch_list_params": {
                    "$ref": "#/definitions/entity.WatchListParams"
                }
            }
        },
        "entity.RuleValidatorStep": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {}
                },
                "skip_for_approval": {
                    "type": "boolean"
                },
                "step_number": {
                    "type": "integer"
                }
            }
        },
        "entity.Shareholder": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "ownership_percent": {
                    "type": "number"
                },
                "parent_id": {
                    "type": "string"
                },
                "person": {
                    "$ref": "#/definitions/entity.Person"
                },
                "shareholder_id": {
                    "type": "string"
                }
            }
        },
        "entity.UnderAgeParams": {
            "type": "object",
            "properties": {
                "minimum_age": {
                    "type": "integer"
                }
            }
        },
        "entity.ValidationStep": {
            "type": "object",
            "properties": {
                "rules_config": {
                    "$ref": "#/definitions/entity.RuleSetConfig"
                },
                "skip_for_approval": {
                    "type": "boolean"
                },
                "step_number": {
                    "type": "integer"
                }
            }
        },
        "entity.WatchListParams": {
            "type": "object",
            "properties": {
                "has_match_in_watch_list_status": {
                    "$ref": "#/definitions/values.Result"
                },
                "want_pep_tag": {
                    "type": "boolean"
                },
                "wanted_sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.Watchlist": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "presentation.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "values.DocumentType": {
            "type": "string",
            "enum": [
                "IDENTIFICATION",
                "PASSPORT",
                "ACCOUNT_OPENING_CONTRACT",
                "MANDATORY_STATEMENTS_AGREEMENT_EVIDENCE",
                "REGISTRATION_FORM",
                "CORPORATE_DOCUMENT",
                "PROOF_OF_ADDRESS",
                "SUPPLIER_AGREEMENT",
                "BUSINESS_LICENSE",
                "FINANCIAL_STATEMENT",
                "INVOICE",
                "APPOINTMENT_DOCUMENT",
                "CONSTITUTION_DOCUMENT"
            ],
            "x-enum-varnames": [
                "DocumentTypeIdentification",
                "DocumentTypePassport",
                "DocumentTypeAccountOpeningContract",
                "DocumentTypeMandatoryStatementsAgreementEvidence",
                "DocumentTypeRegistrationForm",
                "DocumentTypeCorporateDocument",
                "DocumentTypeProofOfAddress",
                "DocumentTypeSupplierAgreement",
                "DocumentTypeBusinessLicense",
                "DocumentTypeFinancialStatement",
                "DocumentTypeInvoice",
                "DocumentTypeAppointmentDocument",
                "DocumentTypeConstitutionDocument"
            ]
        },
        "values.EntityType": {
            "type": "string",
            "enum": [
                "PROFILE",
                "CONTRACT",
                "LEGAL_REPRESENTATIVE",
                "SHAREHOLDER",
                "DIRECTOR",
                "COMPLIANCE_STATE"
            ],
            "x-enum-varnames": [
                "EntityTypeProfile",
                "EntityTypeContract",
                "EntityTypeLegalRepresentative",
                "EntityTypeShareholder",
                "EntityTypeDirector",
                "EntityTypeComplianceState"
            ]
        },
        "values.FileSide": {
            "type": "string",
            "enum": [
                "FRONT",
                "BACK",
                "ALL"
            ],
            "x-enum-varnames": [
                "FileSideFront",
                "FileSideBack",
                "FileSideBackFront"
            ]
        },
        "values.NotificationType": {
            "type": "string",
            "enum": [
                "POST_WARNINGS",
                "EXCHANGE_CONTRACT",
                "SEND_PENDING_DOCUMENTS",
                "SENT_OP",
                "RECEIVED_OP",
                "CANCEL_EXCHANGE_REGISTER"
            ],
            "x-enum-varnames": [
                "NotificationTypePostWarnings",
                "NotificationTypeExchangeContract",
                "NotificationTypeSendPendingDocuments",
                "NotificationTypeSentOP",
                "NotificationTypeReceivedOP",
                "NotificationTypeCancelExchangeRegister"
            ]
        },
        "values.PersonType": {
            "type": "string",
            "enum": [
                "INDIVIDUAL",
                "COMPANY"
            ],
            "x-enum-varnames": [
                "PersonTypeIndividual",
                "PersonTypeCompany"
            ]
        },
        "values.ProblemCode": {
            "type": "string",
            "enum": [
                "INVALID_PROBLEM_CODE",
                "INVOICE_IS_REQUIRED",
                "INVOICE_DOCUMENT_NOT_FOUND",
                "INVOICE_ASSOCIATED_TO_ANOTHER_PROFILE",
                "INVOICE_FILE_NOT_FOUND",
                "STATE_NOT_FOUND",
                "PROFILE_NOT_APPROVED",
                "LEGAL_REPRESENTATIVE_NOT_APPROVED",
                "SHAREHOLDING_NOT_ACHIEVE_MINIMUM_REQUIRED",
                "SHAREHOLDER_NOT_APPROVED",
                "BUREAU_NOT_FOUND",
                "BUREAU_STATUS_NOT_REGULAR",
                "DATE_OF_BIRTH_REQUIRED",
                "INPUTTED_OR_ENRICHED_DATE_OF_BIRTH_REQUIRED",
                "PHONE_REQUIRED",
                "EMAIL_REQUIRED",
                "PEP_REQUIRED",
                "LAST_NAME_REQUIRED",
                "DOCUMENT_NOT_FOUND_INVOICE",
                "DOCUMENT_NOT_FOUND_IDENTIFICATION",
                "DOCUMENT_NOT_FOUND_RG",
                "DOCUMENT_NOT_FOUND_RNE",
                "DOCUMENT_NOT_FOUND_RNM",
                "DOCUMENT_NOT_FOUND_CNH",
                "DOCUMENT_NOT_FOUND_PASSPORT",
                "DOCUMENT_NOT_FOUND_ACCOUNT_OPENING_CONTRACT",
                "DOCUMENT_NOT_FOUND_MANDATORY_STATEMENTS_AGREEMENT_EVIDENCE",
                "DOCUMENT_NOT_FOUND_REGISTRATION_FORM",
                "DOCUMENT_NOT_FOUND_CORPORATE_DOCUMENT",
                "DOCUMENT_NOT_FOUND_ORGANOGRAM",
                "DOCUMENT_NOT_FOUND_PROOF_OF_ADDRESS",
                "DOCUMENT_NOT_FOUND_SUPPLIER_AGREEMENT",
                "DOCUMENT_NOT_FOUND_BUSINESS_LICENSE",
                "DOCUMENT_NOT_FOUND_FINANCIAL_STATEMENT",
                "DOCUMENT_NOT_FOUND_BALANCE_SHEET",
                "DOCUMENT_NOT_FOUND_BILLING_REPORT",
                "DOCUMENT_NOT_FOUND_PROOF_OF_FINANCIAL_STANDING",
                "DOCUMENT_NOT_FOUND_APPOINTMENT_DOCUMENT",
                "DOCUMENT_NOT_FOUND_MINUTES_OF_ELECTION",
                "DOCUMENT_NOT_FOUND_LETTER_OF_ATTORNEY",
                "DOCUMENT_NOT_FOUND_CONSTITUTION_DOCUMENT",
                "DOCUMENT_NOT_FOUND_STATUTE_SOCIAL",
                "DOCUMENT_NOT_FOUND_SOCIAL_CONTRACT",
                "DOCUMENT_NOT_FOUND_PROOF_OF_SHAREHOLDER_CHAIN",
                "FILE_NOT_FOUND_INVOICE",
                "FILE_NOT_FOUND_IDENTIFICATION",
                "FILE_NOT_FOUND_RG",
                "FILE_NOT_FOUND_RNE",
                "FILE_NOT_FOUND_RNM",
                "FILE_NOT_FOUND_CNH",
                "FILE_NOT_FOUND_PASSPORT",
                "FILE_NOT_FOUND_ACCOUNT_OPENING_CONTRACT",
                "FILE_NOT_FOUND_MANDATORY_STATEMENTS_AGREEMENT_EVIDENCE",
                "FILE_NOT_FOUND_REGISTRATION_FORM",
                "FILE_NOT_FOUND_CORPORATE_DOCUMENT",
                "FILE_NOT_FOUND_ORGANOGRAM",
                "FILE_NOT_FOUND_PROOF_OF_ADDRESS",
                "FILE_NOT_FOUND_SUPPLIER_AGREEMENT",
                "FILE_NOT_FOUND_BUSINESS_LICENSE",
                "FILE_NOT_FOUND_FINANCIAL_STATEMENT",
                "FILE_NOT_FOUND_BALANCE_SHEET",
                "FILE_NOT_FOUND_BILLING_REPORT",
                "FILE_NOT_FOUND_PROOF_OF_FINANCIAL_STANDING",
                "FILE_NOT_FOUND_APPOINTMENT_DOCUMENT",
                "FILE_NOT_FOUND_MINUTES_OF_ELECTION",
                "FILE_NOT_FOUND_LETTER_OF_ATTORNEY",
                "FILE_NOT_FOUND_CONSTITUTION_DOCUMENT",
                "FILE_NOT_FOUND_STATUTE_SOCIAL",
                "FILE_NOT_FOUND_SOCIAL_CONTRACT",
                "FILE_NOT_FOUND_PROOF_OF_SHAREHOLDER_CHAIN",
                "ADDRESS_NOT_FOUND",
                "IDENTIFICATION_DOCUMENT_NOT_FOUND",
                "FRONT_FILE_NOT_FOUND",
                "BACK_FILE_NOT_FOUND",
                "ECONOMICAL_ACTIVITY_RISK_UNDEFINED",
                "ECONOMICAL_ACTIVITY_RISK_HIGH",
                "DATE_OF_BIRTH_NOT_INPUTTED_OR_ENRICHED",
                "PERSON_FOUND_ON_WATCHLIST",
                "DIRECTOR_NOT_APPROVED",
                "BOARD_OF_DIRECTORS_INCOMPLETE",
                "NOT_FOUND_CAF_ANALYSIS",
                "NOT_FOUND_ENRICHED_INFORMATION",
                "CAF_ANALYSIS_PENDING",
                "PERSON_HAS_INSUFFICIENT_INCOME",
                "COMPANY_HAS_INSUFFICIENT_BILLING"
            ],
            "x-enum-varnames": [
                "ProblemCodeInvalidProblemCode",
                "ProblemCodeInvoiceIsRequired",
                "ProblemCodeInvoiceDocumentNotFound",
                "ProblemCodeInvoiceAssociatedToAnotherProfile",
                "ProblemCodeInvoiceFileNotFound",
                "ProblemCodeStateNotFound",
                "ProblemCodeProfileNotApproved",
                "ProblemCodeLegalRepresentativeNotApproved",
                "ProblemCodeShareholdingNotAchieveMinimumRequired",
                "ProblemCodeShareholderNotApproved",
                "ProblemCodeNotFoundAtBureau",
                "ProblemCodeBureauStatusNotRegular",
                "ProblemCodeDateOfBirthRequired",
                "ProblemCodeInputtedOrEnrichedDateOfBirthRequired",
                "ProblemCodePhoneRequired",
                "ProblemCodeEmailRequired",
                "ProblemCodePepRequired",
                "ProblemCodeLastNameRequired",
                "ProblemCodeDocumentNotFoundInvoice",
                "ProblemCodeDocumentNotFoundIdentification",
                "ProblemCodeDocumentNotFoundRG",
                "ProblemCodeDocumentNotFoundRNE",
                "ProblemCodeDocumentNotFoundRNM",
                "ProblemCodeDocumentNotFoundCNH",
                "ProblemCodeDocumentNotFoundPassport",
                "ProblemCodeDocumentNotFoundAccountOpeningContract",
                "ProblemCodeDocumentNotFoundMandatoryStatementsAgreementEvidence",
                "ProblemCodeDocumentNotFoundRegistrationForm",
                "ProblemCodeDocumentNotFoundCorporateDocument",
                "ProblemCodeDocumentNotFoundOrganogram",
                "ProblemCodeDocumentNotFoundProofOfAddress",
                "ProblemCodeDocumentNotFoundSupplierAgreement",
                "ProblemCodeDocumentNotFoundBusinessLicense",
                "ProblemCodeDocumentNotFoundFinancialStatement",
                "ProblemCodeDocumentNotFoundBalanceSheet",
                "ProblemCodeDocumentNotFoundBillingReport",
                "ProblemCodeDocumentNotFoundProofOfFinancialStanding",
                "ProblemCodeDocumentNotFoundAppointmentDocument",
                "ProblemCodeDocumentNotFoundMinutesOfElection",
                "ProblemCodeDocumentNotFoundLetterOfAttorney",
                "ProblemCodeDocumentNotFoundConstitutionDocument",
                "ProblemCodeDocumentNotFoundStatuteSocial",
                "ProblemCodeDocumentNotFoundSocialContract",
                "ProblemCodeDocumentNotProofOfShareholderChain",
                "ProblemCodeFileNotFoundInvoice",
                "ProblemCodeFileNotFoundIdentification",
                "ProblemCodeFileNotFoundRG",
                "ProblemCodeFileNotFoundRNE",
                "ProblemCodeFileNotFoundRNM",
                "ProblemCodeFileNotFoundCNH",
                "ProblemCodeFileNotFoundPassport",
                "ProblemCodeFileNotFoundAccountOpeningContract",
                "ProblemCodeFileNotFoundMandatoryStatementsAgreementEvidence",
                "ProblemCodeFileNotFoundRegistrationForm",
                "ProblemCodeFileNotFoundCorporateDocument",
                "ProblemCodeFileNotFoundOrganogram",
                "ProblemCodeFileNotFoundProofOfAddress",
                "ProblemCodeFileNotFoundSupplierAgreement",
                "ProblemCodeFileNotFoundBusinessLicense",
                "ProblemCodeFileNotFoundFinancialStatement",
                "ProblemCodeFileNotFoundBalanceSheet",
                "ProblemCodeFileNotFoundBillingReport",
                "ProblemCodeFileNotFoundProofOfFinancialStanding",
                "ProblemCodeFileNotFoundAppointmentDocument",
                "ProblemCodeFileNotFoundMinutesOfElection",
                "ProblemCodeFileNotFoundLetterOfAttorney",
                "ProblemCodeFileNotFoundConstitutionDocument",
                "ProblemCodeFileNotFoundStatuteSocial",
                "ProblemCodeFileNotFoundSocialContract",
                "ProblemCodeFileNotFoundProofOfShareholderChain",
                "ProblemCodeAddressNotFound",
                "ProblemCodeIdentificationDocumentNotFound",
                "ProblemCodeFrontFileNotFound",
                "ProblemCodeBackFileNotFound",
                "ProblemCodeEconomicalActivityRiskUndefined",
                "ProblemCodeEconomicalActivityRiskHigh",
                "ProblemCodeDateOfBirthNotInputtedOrEnriched",
                "ProblemCodePersonFoundOnWatchlist",
                "ProblemCodeDirectorNotApproved",
                "ProblemCodeBoardOfDirectorsIncomplete",
                "ProblemCodeNotFoundCafAnalysis",
                "ProblemCodeNotFoundEnrichedInformation",
                "ProblemCodeCafAnalysisPending",
                "ProblemCodePersonHasInsufficientMinimumIncome",
                "ProblemCodeCompanyHasInsufficientBilling"
            ]
        },
        "values.Result": {
            "type": "string",
            "enum": [
                "CREATED",
                "INCOMPLETE",
                "ANALYSING",
                "APPROVED",
                "REJECTED",
                "IGNORED",
                "BLOCKED",
                "INACTIVE"
            ],
            "x-enum-varnames": [
                "ResultStatusCreated",
                "ResultStatusIncomplete",
                "ResultStatusAnalysing",
                "ResultStatusApproved",
                "ResultStatusRejected",
                "ResultStatusIgnored",
                "ResultStatusBlocked",
                "ResultStatusInactive"
            ]
        },
        "values.RoleType": {
            "type": "string",
            "enum": [
                "CUSTOMER",
                "MERCHANT",
                "BUSINESS_PARTNER",
                "COUNTERPARTY",
                "LEGAL_REPRESENTATIVE",
                "SHAREHOLDER",
                "DIRECTOR"
            ],
            "x-enum-varnames": [
                "RoleTypeCustomer",
                "RoleTypeMerchant",
                "RoleTypeBusinessPartner",
                "RoleTypeCounterParty",
                "RoleTypeLegalRepresentative",
                "RoleTypeShareholder",
                "RoleTypeDirector"
            ]
        },
        "values.RuleName": {
            "type": "string",
            "enum": [
                "CUSTOMER_IS_UNDER_AGE",
                "CUSTOMER_NOT_FOUND_IN_SERASA",
                "CUSTOMER_HAS_PROBLEMS_IN_SERASA",
                "WATCHLIST",
                "BLACKLIST",
                "REQUIRED_FIELDS_NOT_FOUND",
                "PROFILE_APPROVED",
                "TEST",
                "DOA_VALIDATION",
                "DOA_FILE_NOT_FOUND",
                "MANUAL_BLOCK",
                "SHAREHOLDING",
                "SHAREHOLDERS",
                "PEP",
                "LEGAL_REPRESENTATIVES_RESULT",
                "HIGH_RISK_ACTIVITY",
                "DOCUMENT_NOT_FOUND",
                "FILE_NOT_FOUND",
                "ADDRESS_NOT_FOUND",
                "BLOCKED",
                "INACTIVE",
                "BOARD_OF_DIRECTORS_COMPLETE",
                "BOARD_OF_DIRECTORS_RESULT",
                "PROFILE_DATA",
                "CAF_ANALYSIS_RESULT",
                "INSUFFICIENT_BILLING",
                "INSUFFICIENT_INCOME"
            ],
            "x-enum-varnames": [
                "RuleNameCustomerIsUnderAge",
                "RuleNameNotFoundInSerasa",
                "RuleNameHasProblemsInSerasa",
                "RuleNameOccurrenceInWatchlist",
                "RuleNameOccurrenceInBlacklist",
                "RuleNameRequiredFieldsNotFound",
                "RuleNameProfileApproved",
                "RuleNameTest",
                "RuleNameDOAValidation",
                "RuleNameDOAFileNotfound",
                "RuleNameManualBlock",
                "RuleNameShareholding",
                "RuleNameShareholders",
                "RuleNamePep",
                "RuleNameLegalRepresentativesResult",
                "RuleNameHighRiskActivity",
                "RuleNameDocumentNotFound",
                "RuleNameFileNotFound",
                "RuleNameAddressNotFound",
                "RuleNameBlocked",
                "RuleNameInactive",
                "RuleNameBoardOfDirectorsComplete",
                "RuleNameBoardOfDirectorsResult",
                "RuleNameManualValidation",
                "RuleNameCafAnalysis",
                "RuleNameInsufficientBilling",
                "RuleNameInsufficientIncome"
            ]
        },
        "values.RuleSet": {
            "type": "string",
            "enum": [
                "IS_UNDER_AGE",
                "SERASA_BUREAU",
                "WATCHLIST",
                "BLACKLIST",
                "STATE",
                "INCOMPLETE",
                "INCOMPLETE_CONTRACT",
                "PRECONDITION_CONTRACT_SET",
                "TEST",
                "DOA",
                "MANUAL_BLOCK",
                "OWNERSHIP_STRUCTURE",
                "PEP",
                "LEGAL_REPRESENTATIVES",
                "ACTIVITY_RISK",
                "BOARD_OF_DIRECTORS",
                "MANUAL_VALIDATION",
                "CAF_ANALYSIS",
                "MINIMUM_BILLING",
                "MINIMUM_INCOME"
            ],
            "x-enum-varnames": [
                "RuleSetIsUnderAge",
                "RuleSetSerasa",
                "RuleSetWatchlist",
                "RuleSetBlacklist",
                "RuleSetState",
                "RuleSetIncomplete",
                "RuleSetIncompleteContract",
                "RuleSetPreconditionContract",
                "RuleSetTest",
                "RuleSetDOA",
                "RuleSetManualBlock",
                "RuleSetOwnershipStructure",
                "RuleSetPep",
                "RuleSetLegalRepresentatives",
                "RuleSetActivityRisk",
                "RuleSetBoardOfDirectors",
                "RuleSetManualValidation",
                "RuleSetCafAnalysis",
                "RuleSetMinimumBilling",
                "RuleSetMinimumIncome"
            ]
        }
    }
}