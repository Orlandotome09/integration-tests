// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entity "bitbucket.org/bexstech/temis-compliance/src/core/domain/entity"
import mock "github.com/stretchr/testify/mock"

// BlacklistAdapter is an autogenerated mock type for the BlacklistAdapter type
type BlacklistAdapter struct {
	mock.Mock
}

// Search provides a mock function with given fields: documentNumber, partnerId
func (_m *BlacklistAdapter) Search(documentNumber string, partnerId string) (*entity.BlacklistStatus, bool, error) {
	ret := _m.Called(documentNumber, partnerId)

	var r0 *entity.BlacklistStatus
	if rf, ok := ret.Get(0).(func(string, string) *entity.BlacklistStatus); ok {
		r0 = rf(documentNumber, partnerId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.BlacklistStatus)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string, string) bool); ok {
		r1 = rf(documentNumber, partnerId)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, string) error); ok {
		r2 = rf(documentNumber, partnerId)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
