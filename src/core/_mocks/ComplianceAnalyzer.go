// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import _interfaces "bitbucket.org/bexstech/temis-compliance/src/core/_interfaces"
import entity "bitbucket.org/bexstech/temis-compliance/src/core/domain/entity"
import mock "github.com/stretchr/testify/mock"
import time "time"
import uuid "github.com/google/uuid"

// ComplianceAnalyzer is an autogenerated mock type for the ComplianceAnalyzer type
type ComplianceAnalyzer struct {
	mock.Mock
}

// RunComplianceAnalysis provides a mock function with given fields: complianceValidator, entityID, requestDate, executionTime, cacheValue
func (_m *ComplianceAnalyzer) RunComplianceAnalysis(complianceValidator _interfaces.ComplianceValidator, entityID uuid.UUID, requestDate time.Time, executionTime time.Time, cacheValue bool) (*entity.State, error) {
	ret := _m.Called(complianceValidator, entityID, requestDate, executionTime, cacheValue)

	var r0 *entity.State
	if rf, ok := ret.Get(0).(func(_interfaces.ComplianceValidator, uuid.UUID, time.Time, time.Time, bool) *entity.State); ok {
		r0 = rf(complianceValidator, entityID, requestDate, executionTime, cacheValue)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.State)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(_interfaces.ComplianceValidator, uuid.UUID, time.Time, time.Time, bool) error); ok {
		r1 = rf(complianceValidator, entityID, requestDate, executionTime, cacheValue)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
