// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entity "bitbucket.org/bexstech/temis-compliance/src/core/domain/entity"
import mock "github.com/stretchr/testify/mock"
import uuid "github.com/google/uuid"

// DOAAdapter is an autogenerated mock type for the DOAAdapter type
type DOAAdapter struct {
	mock.Mock
}

// RequestExtraction provides a mock function with given fields: frontFile, frontFileURI, backFile, backFileURI, doc, profileID
func (_m *DOAAdapter) RequestExtraction(frontFile *entity.DocumentFile, frontFileURI string, backFile *entity.DocumentFile, backFileURI string, doc *entity.Document, profileID uuid.UUID) (*entity.DOAExtraction, error) {
	ret := _m.Called(frontFile, frontFileURI, backFile, backFileURI, doc, profileID)

	var r0 *entity.DOAExtraction
	if rf, ok := ret.Get(0).(func(*entity.DocumentFile, string, *entity.DocumentFile, string, *entity.Document, uuid.UUID) *entity.DOAExtraction); ok {
		r0 = rf(frontFile, frontFileURI, backFile, backFileURI, doc, profileID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.DOAExtraction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entity.DocumentFile, string, *entity.DocumentFile, string, *entity.Document, uuid.UUID) error); ok {
		r1 = rf(frontFile, frontFileURI, backFile, backFileURI, doc, profileID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
