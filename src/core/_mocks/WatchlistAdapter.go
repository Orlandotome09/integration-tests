// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entity "bitbucket.org/bexstech/temis-compliance/src/core/domain/entity"
import mock "github.com/stretchr/testify/mock"

// WatchlistAdapter is an autogenerated mock type for the WatchlistAdapter type
type WatchlistAdapter struct {
	mock.Mock
}

// SearchCompany provides a mock function with given fields: legalName, countryCode
func (_m *WatchlistAdapter) SearchCompany(legalName string, countryCode string) (*entity.Watchlist, error) {
	ret := _m.Called(legalName, countryCode)

	var r0 *entity.Watchlist
	if rf, ok := ret.Get(0).(func(string, string) *entity.Watchlist); ok {
		r0 = rf(legalName, countryCode)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Watchlist)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(legalName, countryCode)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SearchIndividual provides a mock function with given fields: documentNumber, firstName, lastName, fullName, countryCode, birthYear
func (_m *WatchlistAdapter) SearchIndividual(documentNumber string, firstName string, lastName string, fullName string, countryCode string, birthYear int) (*entity.Watchlist, error) {
	ret := _m.Called(documentNumber, firstName, lastName, fullName, countryCode, birthYear)

	var r0 *entity.Watchlist
	if rf, ok := ret.Get(0).(func(string, string, string, string, string, int) *entity.Watchlist); ok {
		r0 = rf(documentNumber, firstName, lastName, fullName, countryCode, birthYear)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Watchlist)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string, string, string, int) error); ok {
		r1 = rf(documentNumber, firstName, lastName, fullName, countryCode, birthYear)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
