// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entity "bitbucket.org/bexstech/temis-compliance/src/core/domain/entity"
import mock "github.com/stretchr/testify/mock"
import uuid "github.com/google/uuid"

// EventPublisher is an autogenerated mock type for the EventPublisher type
type EventPublisher struct {
	mock.Mock
}

// SendEvent provides a mock function with given fields: entityID, parentID, engineName, eventType
func (_m *EventPublisher) SendEvent(entityID uuid.UUID, parentID *uuid.UUID, engineName string, eventType string) (*entity.State, error) {
	ret := _m.Called(entityID, parentID, engineName, eventType)

	var r0 *entity.State
	if rf, ok := ret.Get(0).(func(uuid.UUID, *uuid.UUID, string, string) *entity.State); ok {
		r0 = rf(entityID, parentID, engineName, eventType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.State)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID, *uuid.UUID, string, string) error); ok {
		r1 = rf(entityID, parentID, engineName, eventType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
